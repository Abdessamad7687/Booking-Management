
package GUI;

import entities.Categorie;
import entities.Chambre;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import service.CategorieService;
import service.ChambreService;


public class ChambreForm extends javax.swing.JInternalFrame {
    
    private final ChambreService cs;
    private final CategorieService cats;
    private final DefaultTableModel model;
    private Chambre selectedChambre = null;
    /**
     * Creates new form ChmbForm
     */
    public ChambreForm() {
        initComponents();
        cs = new ChambreService();
        cats = new CategorieService();
        model = (DefaultTableModel)chambreListTable.getModel();
        loadCategories();
        loadChambreData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        updateChambre = new javax.swing.JButton();
        addChambre = new javax.swing.JButton();
        removeChambre = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        telTxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        categorieBox = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        chambreListTable = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jPanel3.setBackground(new java.awt.Color(102, 255, 255));

        jPanel1.setBackground(new java.awt.Color(102, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "New room", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 3, 20))); // NOI18N

        updateChambre.setBackground(new java.awt.Color(255, 204, 204));
        updateChambre.setFont(new java.awt.Font("Times New Roman", 2, 16)); // NOI18N
        updateChambre.setText("Update");
        updateChambre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateChambreActionPerformed(evt);
            }
        });

        addChambre.setBackground(new java.awt.Color(255, 204, 204));
        addChambre.setFont(new java.awt.Font("Times New Roman", 2, 16)); // NOI18N
        addChambre.setText("Create");
        addChambre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addChambreActionPerformed(evt);
            }
        });

        removeChambre.setBackground(new java.awt.Color(255, 204, 204));
        removeChambre.setFont(new java.awt.Font("Times New Roman", 2, 16)); // NOI18N
        removeChambre.setText("Delete");
        removeChambre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeChambreActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 2, 15)); // NOI18N
        jLabel3.setText("Phone :");

        telTxt.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        telTxt.setToolTipText("");
        telTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                telTxtKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Times New Roman", 2, 15)); // NOI18N
        jLabel4.setText("category :");

        categorieBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categorieBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(telTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(categorieBox, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(addChambre, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(updateChambre, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(removeChambre, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(69, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(telTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(categorieBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addChambre)
                    .addComponent(updateChambre)
                    .addComponent(removeChambre))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(102, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "My room's list", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 3, 20))); // NOI18N

        chambreListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Phone", "Category"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        chambreListTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chambreListTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(chambreListTable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 534, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.getAccessibleContext().setAccessibleName("Add room");
        jPanel2.getAccessibleContext().setAccessibleName("List");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 568, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 385, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updateChambreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateChambreActionPerformed
        // TODO add your handling code here:
        if(this.selectedChambre == null){
            JOptionPane.showMessageDialog(this, "No room selected", "Error!", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(this, "Do you want to modify?");
        if(confirm == 0){
            selectedChambre.setTelephone(telTxt.getText());
            selectedChambre.setCateg((Categorie)categorieBox.getSelectedItem());
            if(cs.update(selectedChambre)){
                selectedChambre = null;
                loadChambreData();
                clearInputs();
            } else{
                JOptionPane.showMessageDialog(this, "Room modification error", "Error!", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_updateChambreActionPerformed

    private void addChambreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addChambreActionPerformed
        String telInput = telTxt.getText();
        Categorie cat =(Categorie) categorieBox.getItemAt(categorieBox.getSelectedIndex());

        if(telInput.equals("")){
            JOptionPane.showMessageDialog(this, "Please enter room information ", "Error!", JOptionPane.ERROR_MESSAGE);
        } else{
            if(cs.create(new Chambre(telInput, cat))){
                JOptionPane.showMessageDialog(this, "Chambre ajoutee avec succees");
                loadChambreData();
                clearInputs();
            } else{
                JOptionPane.showMessageDialog(this, "Adding room error", "Error!", JOptionPane.ERROR_MESSAGE);
            }
        }

    }//GEN-LAST:event_addChambreActionPerformed

    private void removeChambreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeChambreActionPerformed
        // TODO add your handling code here:
        if(this.selectedChambre == null){
            JOptionPane.showMessageDialog(this, "No room selected", "Error!", JOptionPane.ERROR_MESSAGE);
            return;
        }
        int confirm = JOptionPane.showConfirmDialog(this, "Do you want to deleate?");
        if(confirm == 0){
            if(cs.delete(selectedChambre)){
                selectedChambre = null;
                clearInputs();
                loadChambreData();
            } else{
                JOptionPane.showMessageDialog(this, "deletion room error", "Error!", JOptionPane.ERROR_MESSAGE);
            }
        }

    }//GEN-LAST:event_removeChambreActionPerformed

    private void categorieBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categorieBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_categorieBoxActionPerformed

    private void chambreListTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chambreListTableMouseClicked
        // TODO add your handling code here:
        int id = Integer.parseInt(this.model.getValueAt(chambreListTable.getSelectedRow(),0).toString());
        String tel = this.model.getValueAt(chambreListTable.getSelectedRow(),1).toString();
        Categorie cat = (Categorie)model.getValueAt(chambreListTable.getSelectedRow(), 2);
        selectedChambre = new Chambre(id, tel, cat);
        telTxt.setText(tel);
        categorieBox.getModel().setSelectedItem(cat);
        
    }//GEN-LAST:event_chambreListTableMouseClicked

    private void telTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_telTxtKeyTyped
        // TODO add your handling code here:
        if(!Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '+' && evt.getKeyChar()!= java.awt.event.KeyEvent.VK_BACK_SPACE){
            evt.consume();
        }
    }//GEN-LAST:event_telTxtKeyTyped
    
    
    private void loadChambreData(){
        model.setRowCount(0);
        for(Chambre ch : cs.findAll()){
            this.model.addRow(new Object[]{
                ch.getId(),
                ch.getTelephone(),
                ch.getCateg()
            });
        }
    }
    
    private void loadCategories(){
        for(Categorie c : cats.findAll()){
            categorieBox.addItem(c);
        }
    }
    
    private void clearInputs(){
        telTxt.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addChambre;
    private javax.swing.JComboBox<Categorie> categorieBox;
    private javax.swing.JTable chambreListTable;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton removeChambre;
    private javax.swing.JTextField telTxt;
    private javax.swing.JButton updateChambre;
    // End of variables declaration//GEN-END:variables
}
