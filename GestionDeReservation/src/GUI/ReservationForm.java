
package GUI;

import com.itextpdf.text.Document;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import entities.Chambre;
import entities.Client;
import entities.Reservation;
import java.io.FileOutputStream;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import service.ChambreService;
import service.ClientService;
import service.ReservationService;

public class ReservationForm extends javax.swing.JInternalFrame {
    
    private final ClientService cs;
    private final ChambreService chs;
    private final ReservationService rs;
    private final DefaultTableModel model;
    private Reservation SelectedReservation = null;
    private static int rapportCount = 0;
    /**
     * Creates new form ReservationForm
     */
    public ReservationForm() {
        initComponents();
        cs = new ClientService();
        chs = new ChambreService();
        rs = new ReservationService();
        model =(DefaultTableModel) reservationListTable.getModel();
        
        loadClients();
        loadChambres();
        loadReservationData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        reservationListTable = new javax.swing.JTable();
        genererPdfButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        clientBoxItems = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        addReservation = new javax.swing.JButton();
        removeReservation = new javax.swing.JButton();
        updateReservation = new javax.swing.JButton();
        chambreBoxItems = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        dateFinField = new com.toedter.calendar.JDateChooser();
        dateDebutField = new com.toedter.calendar.JDateChooser();

        setBackground(new java.awt.Color(0, 102, 102));
        setClosable(true);

        jPanel3.setBackground(new java.awt.Color(102, 255, 255));
        jPanel3.setForeground(new java.awt.Color(102, 255, 255));

        jPanel2.setBackground(new java.awt.Color(102, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "My Reservation's list", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 3, 30))); // NOI18N

        reservationListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Client", "Room", "Start day", "Last day"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        reservationListTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reservationListTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(reservationListTable);
        if (reservationListTable.getColumnModel().getColumnCount() > 0) {
            reservationListTable.getColumnModel().getColumn(0).setResizable(false);
            reservationListTable.getColumnModel().getColumn(1).setResizable(false);
            reservationListTable.getColumnModel().getColumn(2).setResizable(false);
            reservationListTable.getColumnModel().getColumn(3).setResizable(false);
            reservationListTable.getColumnModel().getColumn(4).setResizable(false);
        }

        genererPdfButton.setBackground(new java.awt.Color(255, 204, 204));
        genererPdfButton.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        genererPdfButton.setText("Export pdf");
        genererPdfButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genererPdfButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(212, 212, 212)
                        .addComponent(genererPdfButton, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 525, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(genererPdfButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(102, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "New Reservation", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 3, 30))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Times New Roman", 2, 15)); // NOI18N
        jLabel1.setText("Client:");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        jLabel3.setText("Start day");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 2, 15)); // NOI18N
        jLabel4.setText("Last day");

        addReservation.setBackground(new java.awt.Color(255, 204, 204));
        addReservation.setFont(new java.awt.Font("Times New Roman", 2, 16)); // NOI18N
        addReservation.setText("Add");
        addReservation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addReservationActionPerformed(evt);
            }
        });

        removeReservation.setBackground(new java.awt.Color(255, 204, 204));
        removeReservation.setFont(new java.awt.Font("Times New Roman", 2, 16)); // NOI18N
        removeReservation.setText("Delete");
        removeReservation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeReservationActionPerformed(evt);
            }
        });

        updateReservation.setBackground(new java.awt.Color(255, 204, 204));
        updateReservation.setFont(new java.awt.Font("Times New Roman", 2, 16)); // NOI18N
        updateReservation.setText("Modify");
        updateReservation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateReservationActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 2, 15)); // NOI18N
        jLabel2.setText("Room:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dateDebutField, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clientBoxItems, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(52, 52, 52)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(chambreBoxItems, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(206, 206, 206)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateFinField, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(addReservation, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(updateReservation, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(removeReservation, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clientBoxItems, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(chambreBoxItems, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(dateDebutField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(dateFinField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addReservation)
                    .addComponent(updateReservation)
                    .addComponent(removeReservation))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 546, Short.MAX_VALUE))
                .addGap(0, 6, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addReservationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addReservationActionPerformed
        // TODO add your handling code here:
        Date dateD = dateDebutField.getDate();
        Date dateF = dateFinField.getDate();
        Client client = clientBoxItems.getItemAt(clientBoxItems.getSelectedIndex());
        Chambre chambre = chambreBoxItems.getItemAt(chambreBoxItems.getSelectedIndex());
        
        if(rs.create(new Reservation(client, chambre, dateD, dateF))){
            JOptionPane.showMessageDialog(this, "Reservation added succeessfully");
            loadReservationData();
            clearInputs();
        } else{
            JOptionPane.showMessageDialog(this, "Not available for the moment.", "Error!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_addReservationActionPerformed

    private void removeReservationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeReservationActionPerformed
        // TODO add your handling code here:
        if(this.SelectedReservation == null){
            JOptionPane.showMessageDialog(this, "No Reservation Selected", "Error!", JOptionPane.ERROR_MESSAGE);
            return;
        }
        int confirm = JOptionPane.showConfirmDialog(this, "Do you want to delete?");
        if(confirm == 0){
            if(rs.delete(SelectedReservation)){
                SelectedReservation = null;
                clearInputs();
                loadReservationData();
            } else{
                JOptionPane.showMessageDialog(this, "deletion reservation error", "Error!", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_removeReservationActionPerformed

    private void reservationListTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reservationListTableMouseClicked
        // TODO add your handling code here:
        int id = Integer.parseInt(model.getValueAt(reservationListTable.getSelectedRow(),0).toString());
        Client cl = (Client) model.getValueAt(reservationListTable.getSelectedRow(), 1);
        Chambre ch = (Chambre) model.getValueAt(reservationListTable.getSelectedRow(), 2);
        Date dateD = (Date) model.getValueAt(reservationListTable.getSelectedRow(), 3);
        Date dateF = (Date) model.getValueAt(reservationListTable.getSelectedRow(), 4);
        
        SelectedReservation = new Reservation(id,cl, ch, dateD, dateF);
        clientBoxItems.getModel().setSelectedItem(cl);
        chambreBoxItems.getModel().setSelectedItem(ch);
        dateDebutField.setDate(dateD);
        dateFinField.setDate(dateF);
    }//GEN-LAST:event_reservationListTableMouseClicked

    private void updateReservationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateReservationActionPerformed
        // TODO add your handling code here:
        if(this.SelectedReservation == null){
            JOptionPane.showMessageDialog(this, "No Reservation Selected", "Error!", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(this, "Do you want to Edit ?");
        if(confirm == 0){
            SelectedReservation.setClient((Client) clientBoxItems.getSelectedItem());
            SelectedReservation.setChambre((Chambre) chambreBoxItems.getSelectedItem());
            SelectedReservation.setDatedebut(dateDebutField.getDate());
            SelectedReservation.setDatefin(dateFinField.getDate());
            if(rs.update(SelectedReservation)){
                SelectedReservation = null;
                loadReservationData();
                clearInputs();
            } else{
                JOptionPane.showMessageDialog(this, "Modification room error: The room is not available", "Error!", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_updateReservationActionPerformed

    private void genererPdfButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genererPdfButtonActionPerformed
        // TODO add your handling code here:
        String path = "C:\\Users\\Abdesamad\\Desktop\\Swing Gestion reservation\\pdf";
        Document doc = new Document();
        try{
            PdfWriter.getInstance(doc, new FileOutputStream(path + "\\rapportReservation" + (++rapportCount) + ".pdf"));
            doc.open();
            PdfPTable tbl = new PdfPTable(5);
            tbl.addCell("ID");
            tbl.addCell("Client");
            tbl.addCell("Chambre");
            tbl.addCell("DateDebut");
            tbl.addCell("DateFin");
            for(int i =0; i<reservationListTable.getRowCount(); i++){
                String id = reservationListTable.getValueAt(i, 0).toString();
                String Client = reservationListTable.getValueAt(i, 1).toString();
                String Chambre = reservationListTable.getValueAt(i, 2).toString();
                String DateD = reservationListTable.getValueAt(i, 3).toString();
                String DateF = reservationListTable.getValueAt(i, 4).toString();
                tbl.addCell(id);
                tbl.addCell(Client);
                tbl.addCell(Chambre);
                tbl.addCell(DateD);
                tbl.addCell(DateF);
            }
            doc.add(tbl);
            JOptionPane.showMessageDialog(this, "t PDF Report generated");
            doc.close();
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Erreur: We're trying to find a solution, Please wait", "Error!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_genererPdfButtonActionPerformed
    
    private void loadReservationData(){
        model.setRowCount(0);
        for(Reservation r : rs.findAll()){
            this.model.addRow(new Object[]{
                r.getId(),
                r.getClient(),
                r.getChambre(),
                r.getDatedebut(),
                r.getDatefin()
            });
        }
    }
    
    private void loadClients(){
        for (Client c : cs.findAll()){
            clientBoxItems.addItem(c);
        }
    }
    
    private void loadChambres(){
        for (Chambre ch : chs.findAll()){
            chambreBoxItems.addItem(ch);
        }
    }
    
    private void clearInputs(){
        dateDebutField.setDate(null);
        dateFinField.setDate(null);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addReservation;
    private javax.swing.JComboBox<Chambre> chambreBoxItems;
    private javax.swing.JComboBox<Client> clientBoxItems;
    private com.toedter.calendar.JDateChooser dateDebutField;
    private com.toedter.calendar.JDateChooser dateFinField;
    private javax.swing.JButton genererPdfButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton removeReservation;
    private javax.swing.JTable reservationListTable;
    private javax.swing.JButton updateReservation;
    // End of variables declaration//GEN-END:variables
}
