
package GUI;


import entities.Utilisateur;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import service.UtilisateurService;

public class UtilisateurForm extends javax.swing.JInternalFrame {
    private final UtilisateurService us;
    private final DefaultTableModel model;
    private Utilisateur selectedUtilisateur = null;
    
    public UtilisateurForm() {
        initComponents();
        model = (DefaultTableModel)clientListTable.getModel();
        us = new UtilisateurService();
        loadUtilisateurData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        nomTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        prenomTxt = new javax.swing.JTextField();
        updateUser = new javax.swing.JButton();
        addUser = new javax.swing.JButton();
        removeUser = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        usernameTxt = new javax.swing.JTextField();
        passwordTxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        clientListTable = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jPanel3.setBackground(new java.awt.Color(102, 255, 255));
        jPanel3.setForeground(new java.awt.Color(102, 255, 255));

        jPanel1.setBackground(new java.awt.Color(102, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "create user", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Centaur", 1, 36))); // NOI18N
        jPanel1.setFont(new java.awt.Font("Times New Roman", 2, 24)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Centaur", 0, 15)); // NOI18N
        jLabel1.setText("Name :");

        nomTxt.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        nomTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nomTxtKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Centaur", 0, 15)); // NOI18N
        jLabel2.setText("Last name :");

        prenomTxt.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        prenomTxt.setToolTipText("");
        prenomTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                prenomTxtKeyTyped(evt);
            }
        });

        updateUser.setBackground(new java.awt.Color(255, 204, 204));
        updateUser.setFont(new java.awt.Font("Centaur", 0, 15)); // NOI18N
        updateUser.setText("Update");
        updateUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateUserActionPerformed(evt);
            }
        });

        addUser.setBackground(new java.awt.Color(255, 204, 204));
        addUser.setFont(new java.awt.Font("Centaur", 0, 15)); // NOI18N
        addUser.setText("Create");
        addUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUserActionPerformed(evt);
            }
        });

        removeUser.setBackground(new java.awt.Color(255, 204, 204));
        removeUser.setFont(new java.awt.Font("Centaur", 0, 15)); // NOI18N
        removeUser.setText("Delete");
        removeUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeUserActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Centaur", 0, 15)); // NOI18N
        jLabel3.setText("Username:");

        usernameTxt.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        usernameTxt.setToolTipText("");
        usernameTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                usernameTxtKeyTyped(evt);
            }
        });

        passwordTxt.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        passwordTxt.setToolTipText("");

        jLabel4.setFont(new java.awt.Font("Centaur", 0, 15)); // NOI18N
        jLabel4.setText("Password :");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(45, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(usernameTxt)
                    .addComponent(nomTxt, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(prenomTxt, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(passwordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(65, 65, 65)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(removeUser, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addUser, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateUser, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nomTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(prenomTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(usernameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(passwordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(addUser)
                .addGap(18, 18, 18)
                .addComponent(removeUser)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(updateUser)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(102, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "list", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Centaur", 1, 36))); // NOI18N

        clientListTable.setFont(new java.awt.Font("Times New Roman", 2, 12)); // NOI18N
        clientListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "First name", "Last name", "Username", "Password"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        clientListTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clientListTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(clientListTable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 528, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1.getAccessibleContext().setAccessibleName("New user !");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updateUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateUserActionPerformed
        // TODO add your handling code here:
        if(this.selectedUtilisateur == null){
            JOptionPane.showMessageDialog(this, "No user selected", "Error!", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(this, "Do you want to modify?");
        if(confirm == 0){
            this.selectedUtilisateur.setNom(nomTxt.getText());
            this.selectedUtilisateur.setPrenom(prenomTxt.getText());
            this.selectedUtilisateur.setUsername(usernameTxt.getText());
            this.selectedUtilisateur.setPassword(passwordTxt.getText());
            if(us.update(selectedUtilisateur)){
                selectedUtilisateur = null;
                clearInputs();
                loadUtilisateurData();
            } else{
                JOptionPane.showMessageDialog(this, "User modification error", "Error!", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_updateUserActionPerformed

    private void addUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUserActionPerformed
        String nomInput = nomTxt.getText();
        String prenomInput = prenomTxt.getText();
        String usernameInput = usernameTxt.getText();
        String passwordInput = passwordTxt.getText();

        if(nomInput.equals("") || prenomInput.equals("") || usernameInput.equals("") || passwordInput.equals("")){
            JOptionPane.showMessageDialog(this, "Please enter user informations ", "Error!", JOptionPane.ERROR_MESSAGE);
        } else{
            if(this.us.create(new Utilisateur(nomInput, prenomInput, usernameInput, passwordInput))){
                loadUtilisateurData();
                clearInputs();
            }else{
                JOptionPane.showMessageDialog(this, "Adding user error", "Error!", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_addUserActionPerformed

    private void removeUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeUserActionPerformed
        // TODO add your handling code here:
        if(this.selectedUtilisateur == null){
            JOptionPane.showMessageDialog(this, "No user Selected", "Error!", JOptionPane.ERROR_MESSAGE);
            return;
        }
        int confirm = JOptionPane.showConfirmDialog(this, "Do you want to delete");
        if(confirm == 0){
            if(us.delete(selectedUtilisateur)){
                selectedUtilisateur = null;
                clearInputs();
                loadUtilisateurData();
            } else{
                JOptionPane.showMessageDialog(this, "Deletion user error", "Error!", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_removeUserActionPerformed

    private void clientListTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clientListTableMouseClicked
        // TODO add your handling code here:
        int selectedRowIndex = clientListTable.getSelectedRow();
        int id = Integer.parseInt(this.model.getValueAt(selectedRowIndex,0).toString());
        String nom = this.model.getValueAt(selectedRowIndex,1).toString();
        String prenom = this.model.getValueAt(selectedRowIndex,2).toString();
        String tel = this.model.getValueAt(selectedRowIndex,3).toString();
        String email = this.model.getValueAt(selectedRowIndex,4).toString();
        this.selectedUtilisateur = new Utilisateur(id ,nom, prenom, prenom, prenom);
        nomTxt.setText(nom);
        prenomTxt.setText(prenom);
        usernameTxt.setText(tel);
        passwordTxt.setText(email);
    }//GEN-LAST:event_clientListTableMouseClicked

    private void usernameTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usernameTxtKeyTyped
        // TODO add your handling code here:
        if(!Character.isLetterOrDigit(evt.getKeyChar())){
            evt.consume();
        }
    }//GEN-LAST:event_usernameTxtKeyTyped

    private void nomTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nomTxtKeyTyped
        // TODO add your handling code here:
        if(!Character.isLetter(evt.getKeyChar()) && !Character.isSpaceChar(evt.getKeyChar())){
            evt.consume();
        }
    }//GEN-LAST:event_nomTxtKeyTyped

    private void prenomTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_prenomTxtKeyTyped
        // TODO add your handling code here:
        if(!Character.isLetter(evt.getKeyChar()) && !Character.isSpaceChar(evt.getKeyChar())){
            evt.consume();
        }
    }//GEN-LAST:event_prenomTxtKeyTyped
    
    
    public void loadUtilisateurData(){
        this.model.setRowCount(0);
        for(Utilisateur c : us.findAll()){
            this.model.addRow(new Object[]{
                c.getId(),
                c.getNom(),
                c.getPrenom(),
                c.getUsername(),
                c.getPassword()
            });
        }
    }
    
    private void clearInputs(){
        nomTxt.setText("");
        prenomTxt.setText("");
        usernameTxt.setText("");
        passwordTxt.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addUser;
    private javax.swing.JTable clientListTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nomTxt;
    private javax.swing.JTextField passwordTxt;
    private javax.swing.JTextField prenomTxt;
    private javax.swing.JButton removeUser;
    private javax.swing.JButton updateUser;
    private javax.swing.JTextField usernameTxt;
    // End of variables declaration//GEN-END:variables
}
